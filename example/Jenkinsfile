@Library('helperlibdev') import helpers.UnitTestReportHepler

pipeline {
  agent any
  stages {
    stage('Init') {
      parallel {
        stage('Init') {
          steps {
            echo 'Hello World'
            lock(resource: 'a') {
              echo 'Lock'
            }

          }
        }

        stage('What') {
          environment {
            number = 0
          }
          steps {
            script {
              env.number = 1
              println "Number: ${env.number}"
              helper = new UnitTestReportHepler()
            }
            echo "Number: ${env.number}"
            script {
              def remote = ["host": "192.168.1.77", "allowAnyHosts": true]
              withCredentials([sshUserPrivateKey(credentialsId: 'build-server-window', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
                remote.user = userName
                remote.name = userName
                remote.identityFile = identity

                sshCommand remote: remote, command: "echo 1"
              }

              withCredentials([sshUserPrivateKey(credentialsId: 'build-server-window', keyFileVariable: 'identity', passphraseVariable: '', usernameVariable: 'userName')]) {
                remote.user = userName
                remote.name = userName
                remote.identityFile = identity

                sshCommand remote: remote, command: "echo 1"
              }
              echo 'Do something'
              echo 'Do something'
              echo 'Do something'
            }

          }
        }

      }
    }

  }
  environment {
    var1 = 'a1'
  }
}
